{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "ChangeStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "frame": {
                    "description": "Defaults to main frame",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "selectors": {
                    "description": "A list of alternative selectors that lead to selection of a single element\nto perform the step on. Currently, we support CSS selectors, ARIA selectors\n(start with 'aria/'), XPath selectors (start with `xpath/`) and text\nselectors (start with `text/`). Each selector could be a string or an array\nof strings. If it's a string, it means that the selector points directly to\nthe target element. If it's an array, the last element is the selector for\nthe target element and the preceding selectors point to the ancestor\nelements. If the parent element is a shadow root host, the subsequent\nselector is evaluated only against the shadow DOM of the host (i.e.,\n`parent.shadowRoot.querySelector`). If the parent element is not a shadow\nroot host, the subsequent selector is evaluated in the regular DOM (i.e.,\n`parent.querySelector`).\n\nDuring the execution, it's recommended that the implementation tries out\nall of the alternative selectors to improve reliability of the replay as\nsome selectors might get outdated over time.",
                    "items": {
                        "$ref": "#/definitions/Selector"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "change"
                    ],
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "selectors",
                "type",
                "value"
            ],
            "type": "object"
        },
        "ClickStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "button": {
                    "$ref": "#/definitions/PointerButtonType",
                    "description": "Defaults to 'primary' if the device type is a mouse."
                },
                "deviceType": {
                    "$ref": "#/definitions/PointerDeviceType",
                    "description": "Pointer type for the event. Defaults to 'mouse'."
                },
                "duration": {
                    "description": "Delay (in ms) between the mouse up and mouse down of the click. Defaults to\n50ms.",
                    "type": "number"
                },
                "frame": {
                    "description": "Defaults to main frame",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "offsetX": {
                    "description": "in px, relative to the top-left corner of the element content box. Defaults\nto the center of the element",
                    "type": "number"
                },
                "offsetY": {
                    "description": "in px, relative to the top-left corner of the element content box. Defaults\nto the center of the element",
                    "type": "number"
                },
                "selectors": {
                    "description": "A list of alternative selectors that lead to selection of a single element\nto perform the step on. Currently, we support CSS selectors, ARIA selectors\n(start with 'aria/'), XPath selectors (start with `xpath/`) and text\nselectors (start with `text/`). Each selector could be a string or an array\nof strings. If it's a string, it means that the selector points directly to\nthe target element. If it's an array, the last element is the selector for\nthe target element and the preceding selectors point to the ancestor\nelements. If the parent element is a shadow root host, the subsequent\nselector is evaluated only against the shadow DOM of the host (i.e.,\n`parent.shadowRoot.querySelector`). If the parent element is not a shadow\nroot host, the subsequent selector is evaluated in the regular DOM (i.e.,\n`parent.querySelector`).\n\nDuring the execution, it's recommended that the implementation tries out\nall of the alternative selectors to improve reliability of the replay as\nsome selectors might get outdated over time.",
                    "items": {
                        "$ref": "#/definitions/Selector"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "click"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "offsetX",
                "offsetY",
                "selectors",
                "type"
            ],
            "type": "object"
        },
        "CloseStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "close"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "DoubleClickStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "button": {
                    "$ref": "#/definitions/PointerButtonType",
                    "description": "Defaults to 'primary' if the device type is a mouse."
                },
                "deviceType": {
                    "$ref": "#/definitions/PointerDeviceType",
                    "description": "Pointer type for the event. Defaults to 'mouse'."
                },
                "frame": {
                    "description": "Defaults to main frame",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "offsetX": {
                    "description": "in px, relative to the top-left corner of the element content box. Defaults\nto the center of the element",
                    "type": "number"
                },
                "offsetY": {
                    "description": "in px, relative to the top-left corner of the element content box. Defaults\nto the center of the element",
                    "type": "number"
                },
                "selectors": {
                    "description": "A list of alternative selectors that lead to selection of a single element\nto perform the step on. Currently, we support CSS selectors, ARIA selectors\n(start with 'aria/'), XPath selectors (start with `xpath/`) and text\nselectors (start with `text/`). Each selector could be a string or an array\nof strings. If it's a string, it means that the selector points directly to\nthe target element. If it's an array, the last element is the selector for\nthe target element and the preceding selectors point to the ancestor\nelements. If the parent element is a shadow root host, the subsequent\nselector is evaluated only against the shadow DOM of the host (i.e.,\n`parent.shadowRoot.querySelector`). If the parent element is not a shadow\nroot host, the subsequent selector is evaluated in the regular DOM (i.e.,\n`parent.querySelector`).\n\nDuring the execution, it's recommended that the implementation tries out\nall of the alternative selectors to improve reliability of the replay as\nsome selectors might get outdated over time.",
                    "items": {
                        "$ref": "#/definitions/Selector"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "doubleClick"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "offsetX",
                "offsetY",
                "selectors",
                "type"
            ],
            "type": "object"
        },
        "EmulateNetworkConditionsStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "download": {
                    "type": "number"
                },
                "latency": {
                    "type": "number"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "emulateNetworkConditions"
                    ],
                    "type": "string"
                },
                "upload": {
                    "type": "number"
                }
            },
            "required": [
                "download",
                "latency",
                "type",
                "upload"
            ],
            "type": "object"
        },
        "HoverStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "frame": {
                    "description": "Defaults to main frame",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "selectors": {
                    "description": "A list of alternative selectors that lead to selection of a single element\nto perform the step on. Currently, we support CSS selectors, ARIA selectors\n(start with 'aria/'), XPath selectors (start with `xpath/`) and text\nselectors (start with `text/`). Each selector could be a string or an array\nof strings. If it's a string, it means that the selector points directly to\nthe target element. If it's an array, the last element is the selector for\nthe target element and the preceding selectors point to the ancestor\nelements. If the parent element is a shadow root host, the subsequent\nselector is evaluated only against the shadow DOM of the host (i.e.,\n`parent.shadowRoot.querySelector`). If the parent element is not a shadow\nroot host, the subsequent selector is evaluated in the regular DOM (i.e.,\n`parent.querySelector`).\n\nDuring the execution, it's recommended that the implementation tries out\nall of the alternative selectors to improve reliability of the replay as\nsome selectors might get outdated over time.",
                    "items": {
                        "$ref": "#/definitions/Selector"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "hover"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "selectors",
                "type"
            ],
            "type": "object"
        },
        "InteractChain": {
            "anyOf": [
                {
                    "$ref": "#/definitions/JSPathClickInteractChain"
                },
                {
                    "$ref": "#/definitions/PuppeteerReplayInteractChain"
                }
            ]
        },
        "JSONObject": {
            "additionalProperties": {
                "$ref": "#/definitions/JSONValue"
            },
            "type": "object"
        },
        "JSONValue": {
            "anyOf": [
                {
                    "$ref": "#/definitions/JSONObject"
                },
                {
                    "items": {
                        "$ref": "#/definitions/JSONValue"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "null",
                        "string",
                        "number",
                        "boolean"
                    ]
                }
            ]
        },
        "JSPathClickInteractChain": {
            "additionalProperties": false,
            "properties": {
                "paths": {
                    "description": "JavaScript expressions returning elements on page to click in order",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "type": {
                    "enum": [
                        "js-path-click"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "paths",
                "type"
            ],
            "type": "object"
        },
        "Key": {
            "enum": [
                "\u0000",
                "\n",
                "\r",
                " ",
                "!",
                "\"",
                "#",
                "$",
                "%",
                "&",
                "'",
                "(",
                ")",
                "*",
                "+",
                ",",
                "-",
                ".",
                "/",
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                ":",
                ";",
                "<",
                "=",
                ">",
                "?",
                "@",
                "A",
                "Abort",
                "Accept",
                "Alt",
                "AltGraph",
                "AltLeft",
                "AltRight",
                "ArrowDown",
                "ArrowLeft",
                "ArrowRight",
                "ArrowUp",
                "Attn",
                "AudioVolumeDown",
                "AudioVolumeMute",
                "AudioVolumeUp",
                "B",
                "Backquote",
                "Backslash",
                "Backspace",
                "BracketLeft",
                "BracketRight",
                "C",
                "Call",
                "Camera",
                "Cancel",
                "CapsLock",
                "Clear",
                "Comma",
                "ContextMenu",
                "Control",
                "ControlLeft",
                "ControlRight",
                "Convert",
                "CrSel",
                "D",
                "Delete",
                "Digit0",
                "Digit1",
                "Digit2",
                "Digit3",
                "Digit4",
                "Digit5",
                "Digit6",
                "Digit7",
                "Digit8",
                "Digit9",
                "E",
                "Eject",
                "End",
                "EndCall",
                "Enter",
                "Equal",
                "EraseEof",
                "Escape",
                "ExSel",
                "Execute",
                "F",
                "F1",
                "F10",
                "F11",
                "F12",
                "F13",
                "F14",
                "F15",
                "F16",
                "F17",
                "F18",
                "F19",
                "F2",
                "F20",
                "F21",
                "F22",
                "F23",
                "F24",
                "F3",
                "F4",
                "F5",
                "F6",
                "F7",
                "F8",
                "F9",
                "G",
                "H",
                "Help",
                "Home",
                "I",
                "Insert",
                "J",
                "K",
                "KeyA",
                "KeyB",
                "KeyC",
                "KeyD",
                "KeyE",
                "KeyF",
                "KeyG",
                "KeyH",
                "KeyI",
                "KeyJ",
                "KeyK",
                "KeyL",
                "KeyM",
                "KeyN",
                "KeyO",
                "KeyP",
                "KeyQ",
                "KeyR",
                "KeyS",
                "KeyT",
                "KeyU",
                "KeyV",
                "KeyW",
                "KeyX",
                "KeyY",
                "KeyZ",
                "L",
                "M",
                "MediaPlayPause",
                "MediaStop",
                "MediaTrackNext",
                "MediaTrackPrevious",
                "Meta",
                "MetaLeft",
                "MetaRight",
                "Minus",
                "ModeChange",
                "N",
                "NonConvert",
                "NumLock",
                "Numpad0",
                "Numpad1",
                "Numpad2",
                "Numpad3",
                "Numpad4",
                "Numpad5",
                "Numpad6",
                "Numpad7",
                "Numpad8",
                "Numpad9",
                "NumpadAdd",
                "NumpadDecimal",
                "NumpadDivide",
                "NumpadEnter",
                "NumpadEqual",
                "NumpadMultiply",
                "NumpadSubtract",
                "O",
                "Open",
                "P",
                "PageDown",
                "PageUp",
                "Pause",
                "Period",
                "Play",
                "Power",
                "Print",
                "PrintScreen",
                "Props",
                "Q",
                "Quote",
                "R",
                "S",
                "ScrollLock",
                "Select",
                "Semicolon",
                "Shift",
                "ShiftLeft",
                "ShiftRight",
                "Slash",
                "SoftLeft",
                "SoftRight",
                "Space",
                "T",
                "Tab",
                "U",
                "V",
                "VolumeDown",
                "VolumeUp",
                "W",
                "X",
                "Y",
                "Z",
                "ZoomOut",
                "[",
                "\\",
                "]",
                "^",
                "_",
                "`",
                "a",
                "b",
                "c",
                "d",
                "e",
                "f",
                "g",
                "h",
                "i",
                "j",
                "k",
                "l",
                "m",
                "n",
                "o",
                "p",
                "q",
                "r",
                "s",
                "t",
                "u",
                "v",
                "w",
                "x",
                "y",
                "z",
                "{",
                "|",
                "}",
                "~"
            ],
            "type": "string"
        },
        "KeyDownStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "key": {
                    "$ref": "#/definitions/Key"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "keyDown"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "key",
                "type"
            ],
            "type": "object"
        },
        "KeyUpStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "key": {
                    "$ref": "#/definitions/Key"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "keyUp"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "key",
                "type"
            ],
            "type": "object"
        },
        "NavigateStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "navigate"
                    ],
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "type",
                "url"
            ],
            "type": "object"
        },
        "NavigationEvent": {
            "additionalProperties": false,
            "properties": {
                "title": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "navigation"
                    ],
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "PointerButtonType": {
            "enum": [
                "auxiliary",
                "back",
                "forward",
                "primary",
                "secondary"
            ],
            "type": "string"
        },
        "PointerDeviceType": {
            "enum": [
                "mouse",
                "pen",
                "touch"
            ],
            "type": "string"
        },
        "PuppeteerReplayInteractChain": {
            "additionalProperties": false,
            "properties": {
                "flow": {
                    "$ref": "#/definitions/UserFlow"
                },
                "type": {
                    "enum": [
                        "puppeteer-replay"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "flow",
                "type"
            ],
            "type": "object"
        },
        "ScreenshotTrigger": {
            "description": "- `loaded`: first page loaded;\n- `filled`: after group of fields filled;\n- `submitted`: after group of fields submitted;\n- `link-clicked`: page opened after detected login/register link clicked;\n- `interact-chain-executed`: after a specified interact chain was executed;\n- `new-page`: after a new tab has fully loaded;",
            "enum": [
                "filled",
                "interact-chain-executed",
                "link-clicked",
                "loaded",
                "new-page",
                "submitted"
            ],
            "type": "string"
        },
        "ScrollElementStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "frame": {
                    "description": "Defaults to main frame",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "selectors": {
                    "description": "A list of alternative selectors that lead to selection of a single element\nto perform the step on. Currently, we support CSS selectors, ARIA selectors\n(start with 'aria/'), XPath selectors (start with `xpath/`) and text\nselectors (start with `text/`). Each selector could be a string or an array\nof strings. If it's a string, it means that the selector points directly to\nthe target element. If it's an array, the last element is the selector for\nthe target element and the preceding selectors point to the ancestor\nelements. If the parent element is a shadow root host, the subsequent\nselector is evaluated only against the shadow DOM of the host (i.e.,\n`parent.shadowRoot.querySelector`). If the parent element is not a shadow\nroot host, the subsequent selector is evaluated in the regular DOM (i.e.,\n`parent.querySelector`).\n\nDuring the execution, it's recommended that the implementation tries out\nall of the alternative selectors to improve reliability of the replay as\nsome selectors might get outdated over time.",
                    "items": {
                        "$ref": "#/definitions/Selector"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/StepType"
                }
            },
            "required": [
                "selectors",
                "type"
            ],
            "type": "object"
        },
        "ScrollPageStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "frame": {
                    "description": "Defaults to main frame",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "scroll"
                    ],
                    "type": "string"
                },
                "x": {
                    "description": "Absolute scroll x position in px. Defaults to 0",
                    "type": "number"
                },
                "y": {
                    "description": "Absolute scroll y position in px. Defaults to 0",
                    "type": "number"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "Selector": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "type": "string"
                }
            ]
        },
        "SetViewportStep": {
            "additionalProperties": false,
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "deviceScaleFactor": {
                    "type": "number"
                },
                "hasTouch": {
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "isLandscape": {
                    "type": "boolean"
                },
                "isMobile": {
                    "type": "boolean"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "setViewport"
                    ],
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            },
            "required": [
                "deviceScaleFactor",
                "hasTouch",
                "height",
                "isLandscape",
                "isMobile",
                "type",
                "width"
            ],
            "type": "object"
        },
        "Step": {
            "anyOf": [
                {
                    "$ref": "#/definitions/DoubleClickStep"
                },
                {
                    "$ref": "#/definitions/ClickStep"
                },
                {
                    "$ref": "#/definitions/HoverStep"
                },
                {
                    "$ref": "#/definitions/ChangeStep"
                },
                {
                    "$ref": "#/definitions/EmulateNetworkConditionsStep"
                },
                {
                    "$ref": "#/definitions/KeyDownStep"
                },
                {
                    "$ref": "#/definitions/KeyUpStep"
                },
                {
                    "$ref": "#/definitions/CloseStep"
                },
                {
                    "$ref": "#/definitions/SetViewportStep"
                },
                {
                    "$ref": "#/definitions/ScrollPageStep"
                },
                {
                    "$ref": "#/definitions/ScrollElementStep"
                },
                {
                    "$ref": "#/definitions/NavigateStep"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "assertedEvents": {
                            "items": {
                                "$ref": "#/definitions/NavigationEvent"
                            },
                            "type": "array"
                        },
                        "name": {
                            "type": "string"
                        },
                        "parameters": {},
                        "target": {
                            "description": "Defaults to main",
                            "type": "string"
                        },
                        "timeout": {
                            "type": "number"
                        },
                        "type": {
                            "$ref": "#/definitions/StepType"
                        }
                    },
                    "required": [
                        "name",
                        "parameters",
                        "type"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "assertedEvents": {
                            "items": {
                                "$ref": "#/definitions/NavigationEvent"
                            },
                            "type": "array"
                        },
                        "frame": {
                            "description": "Defaults to main frame",
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        "name": {
                            "type": "string"
                        },
                        "parameters": {},
                        "target": {
                            "description": "Defaults to main",
                            "type": "string"
                        },
                        "timeout": {
                            "type": "number"
                        },
                        "type": {
                            "$ref": "#/definitions/StepType"
                        }
                    },
                    "required": [
                        "name",
                        "parameters",
                        "type"
                    ],
                    "type": "object"
                },
                {
                    "$ref": "#/definitions/WaitForElementStep"
                },
                {
                    "$ref": "#/definitions/WaitForExpressionStep"
                }
            ]
        },
        "StepType": {
            "enum": [
                "change",
                "click",
                "close",
                "customStep",
                "doubleClick",
                "emulateNetworkConditions",
                "hover",
                "keyDown",
                "keyUp",
                "navigate",
                "scroll",
                "setViewport",
                "waitForElement",
                "waitForExpression"
            ],
            "type": "string"
        },
        "UserFlow": {
            "additionalProperties": false,
            "description": "@puppeteer/replay (Chrome DevTools) flow",
            "properties": {
                "selectorAttribute": {
                    "description": "The name of the attribute to use to generate selectors instead of regular\nCSS selectors. For example, specifying `data-testid` would generate the\nselector `[data-testid=value]` for the element `<div data-testid=value>`.",
                    "type": "string"
                },
                "steps": {
                    "items": {
                        "$ref": "#/definitions/Step"
                    },
                    "type": "array"
                },
                "timeout": {
                    "description": "Timeout in milliseconds.",
                    "type": "number"
                },
                "title": {
                    "description": "Human-readble title describing the recorder user flow.",
                    "type": "string"
                }
            },
            "required": [
                "steps",
                "title"
            ],
            "type": "object"
        },
        "WaitForElementStep": {
            "additionalProperties": false,
            "description": "`waitForElement` allows waiting for the presence (or absence) of the number\nof elements identified by the selector.\n\nFor example, the following step would wait for less than three elements\nto be on the page that match the selector `.my-class`.\n\n```\n{\n  \"type\": \"waitForElement\",\n  \"selectors\": [\".my-class\"],\n  \"operator\": \"<=\",\n  \"count\": 2,\n}\n```",
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "attributes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Whether to also check the element(s) for the given attributes.",
                    "type": "object"
                },
                "count": {
                    "type": "number"
                },
                "frame": {
                    "description": "Defaults to main frame",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "operator": {
                    "enum": [
                        "<=",
                        "==",
                        ">="
                    ],
                    "type": "string"
                },
                "properties": {
                    "additionalProperties": false,
                    "description": "Whether to also check the element(s) for the given properties.",
                    "properties": {
                        "ATTRIBUTE_NODE": {
                            "type": "number"
                        },
                        "CDATA_SECTION_NODE": {
                            "type": "number"
                        },
                        "COMMENT_NODE": {
                            "type": "number"
                        },
                        "DOCUMENT_FRAGMENT_NODE": {
                            "type": "number"
                        },
                        "DOCUMENT_NODE": {
                            "type": "number"
                        },
                        "DOCUMENT_POSITION_CONTAINED_BY": {
                            "type": "number"
                        },
                        "DOCUMENT_POSITION_CONTAINS": {
                            "type": "number"
                        },
                        "DOCUMENT_POSITION_DISCONNECTED": {
                            "type": "number"
                        },
                        "DOCUMENT_POSITION_FOLLOWING": {
                            "type": "number"
                        },
                        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                            "type": "number"
                        },
                        "DOCUMENT_POSITION_PRECEDING": {
                            "type": "number"
                        },
                        "DOCUMENT_TYPE_NODE": {
                            "type": "number"
                        },
                        "ELEMENT_NODE": {
                            "type": "number"
                        },
                        "ENTITY_NODE": {
                            "type": "number"
                        },
                        "ENTITY_REFERENCE_NODE": {
                            "type": "number"
                        },
                        "NOTATION_NODE": {
                            "type": "number"
                        },
                        "PROCESSING_INSTRUCTION_NODE": {
                            "type": "number"
                        },
                        "TEXT_NODE": {
                            "type": "number"
                        },
                        "accessKey": {
                            "type": "string"
                        },
                        "accessKeyLabel": {
                            "type": "string"
                        },
                        "ariaAtomic": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaAutoComplete": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaBusy": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaChecked": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaColCount": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaColIndex": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaColSpan": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaCurrent": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaDisabled": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaExpanded": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaHasPopup": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaHidden": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaKeyShortcuts": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaLabel": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaLevel": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaLive": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaModal": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaMultiLine": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaMultiSelectable": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaOrientation": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaPlaceholder": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaPosInSet": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaPressed": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaReadOnly": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaRequired": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaRoleDescription": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaRowCount": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaRowIndex": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaRowSpan": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaSelected": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaSetSize": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaSort": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaValueMax": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaValueMin": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaValueNow": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ariaValueText": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "autocapitalize": {
                            "type": "string"
                        },
                        "autofocus": {
                            "type": "boolean"
                        },
                        "baseURI": {
                            "type": "string"
                        },
                        "childElementCount": {
                            "type": "number"
                        },
                        "className": {
                            "type": "string"
                        },
                        "clientHeight": {
                            "type": "number"
                        },
                        "clientLeft": {
                            "type": "number"
                        },
                        "clientTop": {
                            "type": "number"
                        },
                        "clientWidth": {
                            "type": "number"
                        },
                        "contentEditable": {
                            "type": "string"
                        },
                        "dir": {
                            "type": "string"
                        },
                        "draggable": {
                            "type": "boolean"
                        },
                        "enterKeyHint": {
                            "type": "string"
                        },
                        "hidden": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "string"
                        },
                        "inert": {
                            "type": "boolean"
                        },
                        "innerHTML": {
                            "type": "string"
                        },
                        "innerText": {
                            "type": "string"
                        },
                        "inputMode": {
                            "type": "string"
                        },
                        "isConnected": {
                            "type": "boolean"
                        },
                        "isContentEditable": {
                            "type": "boolean"
                        },
                        "lang": {
                            "type": "string"
                        },
                        "localName": {
                            "type": "string"
                        },
                        "namespaceURI": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "nodeName": {
                            "type": "string"
                        },
                        "nodeType": {
                            "type": "number"
                        },
                        "nodeValue": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "offsetHeight": {
                            "type": "number"
                        },
                        "offsetLeft": {
                            "type": "number"
                        },
                        "offsetTop": {
                            "type": "number"
                        },
                        "offsetWidth": {
                            "type": "number"
                        },
                        "outerHTML": {
                            "type": "string"
                        },
                        "outerText": {
                            "type": "string"
                        },
                        "prefix": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "scrollHeight": {
                            "type": "number"
                        },
                        "scrollLeft": {
                            "type": "number"
                        },
                        "scrollTop": {
                            "type": "number"
                        },
                        "scrollWidth": {
                            "type": "number"
                        },
                        "slot": {
                            "type": "string"
                        },
                        "spellcheck": {
                            "type": "boolean"
                        },
                        "tabIndex": {
                            "type": "number"
                        },
                        "tagName": {
                            "type": "string"
                        },
                        "textContent": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "title": {
                            "type": "string"
                        },
                        "translate": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "selectors": {
                    "description": "A list of alternative selectors that lead to selection of a single element\nto perform the step on. Currently, we support CSS selectors, ARIA selectors\n(start with 'aria/'), XPath selectors (start with `xpath/`) and text\nselectors (start with `text/`). Each selector could be a string or an array\nof strings. If it's a string, it means that the selector points directly to\nthe target element. If it's an array, the last element is the selector for\nthe target element and the preceding selectors point to the ancestor\nelements. If the parent element is a shadow root host, the subsequent\nselector is evaluated only against the shadow DOM of the host (i.e.,\n`parent.shadowRoot.querySelector`). If the parent element is not a shadow\nroot host, the subsequent selector is evaluated in the regular DOM (i.e.,\n`parent.querySelector`).\n\nDuring the execution, it's recommended that the implementation tries out\nall of the alternative selectors to improve reliability of the replay as\nsome selectors might get outdated over time.",
                    "items": {
                        "$ref": "#/definitions/Selector"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "waitForElement"
                    ],
                    "type": "string"
                },
                "visible": {
                    "description": "Whether to wait for elements matching this step to be hidden. This can be\nthought of as an inversion of this step.",
                    "type": "boolean"
                }
            },
            "required": [
                "selectors",
                "type"
            ],
            "type": "object"
        },
        "WaitForExpressionStep": {
            "additionalProperties": false,
            "description": "`waitForExpression` allows for a JavaScript expression to resolve to truthy\nvalue.\n\nFor example, the following step pauses for two seconds and then resolves to\ntrue allowing the replay to continue.\n\n```\n{\n  \"type\": \"waitForExpression\",\n  \"expression\": \"new Promise(resolve => setTimeout(() => resolve(true),\n2000))\",\n}\n```",
            "properties": {
                "assertedEvents": {
                    "items": {
                        "$ref": "#/definitions/NavigationEvent"
                    },
                    "type": "array"
                },
                "expression": {
                    "type": "string"
                },
                "frame": {
                    "description": "Defaults to main frame",
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "target": {
                    "description": "Defaults to main",
                    "type": "string"
                },
                "timeout": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "waitForExpression"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "expression",
                "type"
            ],
            "type": "object"
        }
    },
    "properties": {
        "debug": {
            "description": "Turn on some debugging assertions.\nDefault false unless an inspector is activated",
            "type": "boolean"
        },
        "disableClosedShadowDom": {
            "default": true,
            "description": "Transform calls to attach closed ShadowRoots into calls to attach open ones,\nto enable the crawler to search for fields etc. there.\n(May not always work.)",
            "type": "boolean"
        },
        "fill": {
            "additionalProperties": false,
            "description": "Field fill-related settings",
            "properties": {
                "addFacebookButton": {
                    "default": true,
                    "description": "Add and click a dummy button to detect Facebook leaks",
                    "type": "boolean"
                },
                "appendDomainToEmail": {
                    "default": false,
                    "description": "Append \"+domainname\" to the local part of the email address?",
                    "type": "boolean"
                },
                "email": {
                    "description": "Email address to fill in",
                    "type": "string"
                },
                "maxFields": {
                    "description": "Maximum number of fields to fill (approximate)",
                    "minimum": 0,
                    "type": "integer"
                },
                "password": {
                    "description": "Password to fill in",
                    "type": "string"
                },
                "simulateShowPassword": {
                    "default": false,
                    "description": "Simulate 'show password' feature by changing password field type to text",
                    "type": "boolean"
                },
                "submit": {
                    "default": true,
                    "description": "Try to submit forms?",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "immediatelyInjectDomLeakDetection": {
            "default": false,
            "description": "Always immediately inject password to attribute leak detection,\ninstead of before filling a password field.\nWill not capture stack traces.\nUseful for manual form filling",
            "type": "boolean"
        },
        "interactChains": {
            "description": "Extra things to do to find forms",
            "items": {
                "$ref": "#/definitions/InteractChain"
            },
            "type": "array"
        },
        "maxLinks": {
            "description": "Maximum number of links to click automatically on the landing page, can be 0",
            "minimum": 0,
            "type": "integer"
        },
        "screenshot": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "target": {
                            "description": "Folder to place screenshots in (under subfolder with domain name),\nor callback for created screenshots (JS-only)",
                            "type": "string"
                        },
                        "triggers": {
                            "anyOf": [
                                {
                                    "items": {
                                        "$ref": "#/definitions/ScreenshotTrigger"
                                    },
                                    "type": "array"
                                },
                                {
                                    "enum": [
                                        true
                                    ],
                                    "type": "boolean"
                                }
                            ],
                            "description": "Triggers for making screenshots, or true to enable all triggers"
                        }
                    },
                    "required": [
                        "target",
                        "triggers"
                    ],
                    "type": "object"
                },
                {
                    "type": "null"
                }
            ],
            "default": null,
            "description": "Options for making screenshots after certain actions.\nnull to disable."
        },
        "skipExternal": {
            "default": "frames",
            "description": "Whether to skip external sites.\nSpecify \"pages\" to only look at top-level URLs.",
            "enum": [
                false,
                "frames",
                "pages"
            ]
        },
        "sleepMs": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "fill": {
                            "anyOf": [
                                {
                                    "additionalProperties": false,
                                    "properties": {
                                        "betweenKeys": {
                                            "description": "Maximum time between keystrokes when typing in a field",
                                            "minimum": 0,
                                            "type": "number"
                                        },
                                        "clickDwell": {
                                            "description": "Time between mouse down & mouse up when clicking a field",
                                            "minimum": 0,
                                            "type": "number"
                                        },
                                        "keyDwell": {
                                            "description": "Maximum time between key down & key up when typing in a field",
                                            "minimum": 0,
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field fill-related delays, or null to disable these delays"
                        },
                        "postFacebookButtonClick": {
                            "description": "Delay after adding & clicking Facebook button",
                            "minimum": 0,
                            "type": "number"
                        },
                        "postFill": {
                            "description": "Delay after filling some fields (in a form)",
                            "minimum": 0,
                            "type": "number"
                        },
                        "postNavigate": {
                            "description": "Delay after navigating to some page",
                            "minimum": 0,
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                {
                    "type": "null"
                }
            ],
            "description": "Intentional delays in milliseconds, or null to disable all delays"
        },
        "stopEarly": {
            "default": false,
            "description": "Whether to stop crawl early.\nSpecify \"first-page-with-form\" to stop after the first page with a form\n(similar to maxFields=1 but after filling all forms on that page)",
            "enum": [
                false,
                "first-page-with-form"
            ]
        },
        "timeoutMs": {
            "additionalProperties": false,
            "description": "Timeouts in milliseconds",
            "properties": {
                "followLink": {
                    "description": "Timeout waiting for navigation after following a link",
                    "minimum": 0,
                    "type": "number"
                },
                "reload": {
                    "description": "Page reload timeout (e.g. after submit)",
                    "minimum": 0,
                    "type": "number"
                },
                "submitField": {
                    "description": "Timeout waiting for navigation after submitting a field",
                    "minimum": 0,
                    "type": "number"
                }
            },
            "type": "object"
        },
        "useSourceMaps": {
            "default": "aggressive",
            "description": "Try to use source maps for DOM leak stack traces, specify \"aggressive\" to try adding .map after .js URL",
            "enum": [
                "aggressive",
                false,
                true
            ]
        }
    },
    "type": "object"
}

